<Activity mc:Ignorable="sads sap sap2010" x:Class="WorkflowConsoleApplicationForAccountService.Workflow1"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:local="clr-namespace:WorkflowConsoleApplicationForAccountService"
 xmlns:local1="clr-namespace:WorkflowConsoleApplicationForAccountService.Crypto.Activities"
 xmlns:local2="clr-namespace:WorkflowConsoleApplicationForAccountService.AccountServiceNha.Activities"
 xmlns:local3="clr-namespace:WorkflowConsoleApplicationForAccountService.ServiceReferenceLoginNha.Activities"
 xmlns:local4="clr-namespace:WorkflowConsoleApplicationForAccountService.NewforcusServiceNha.Activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:p="http://schemas.microsoft.com/netfx/2009/xaml/servicemodel"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:sc="clr-namespace:System.ComponentModel;assembly=System"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:wa="clr-namespace:WorkflowConsoleApplicationForAccountService.AccountServiceNha"
 xmlns:wc="clr-namespace:WorkflowConsoleApplicationForAccountService.Crypto"
 xmlns:wn="clr-namespace:WorkflowConsoleApplicationForAccountService.NewforcusServiceNha"
 xmlns:ws="clr-namespace:WorkflowConsoleApplicationForAccountService.ServiceReferenceLoginNha"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="UserNameArgument" Type="InArgument(x:String)" />
    <x:Property Name="PasswordArgument" Type="InArgument(x:String)" />
    <x:Property Name="ResultCreate" Type="OutArgument(x:Boolean)" />
    <x:Property Name="ResulltLogin" Type="OutArgument(s:Boolean[])" />
    <x:Property Name="ToEncrypt" Type="InArgument(x:String)" />
    <x:Property Name="Encrypted" Type="InArgument(x:String)" />
    <x:Property Name="Decrypted" Type="InArgument(x:String)" />
    <x:Property Name="Topic" Type="InArgument(s:String[])" />
    <x:Property Name="ResultTopic" Type="OutArgument(s:String[])" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap2010:WorkflowViewState.IdRef>WorkflowConsoleApplicationForAccountService.Workflow1_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>WorkflowConsoleApplicationForAccountService</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Boolean" Default="True" Name="againWhile" />
      <Variable x:TypeArguments="x:String" Default="User Name" Name="defaultName" />
    </Sequence.Variables>
    <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="Welcome to Accound Service." />
    <local:CodeActivityIINWorkflowApp sap2010:WorkflowViewState.IdRef="CodeActivityIINWorkflowApp_1">
      <local:CodeActivityIINWorkflowApp.defaultName>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String">defaultName</mca:CSharpValue>
        </InArgument>
      </local:CodeActivityIINWorkflowApp.defaultName>
      <local:CodeActivityIINWorkflowApp.enterName>
        <OutArgument x:TypeArguments="x:String">
          <mca:CSharpReference x:TypeArguments="x:String">defaultName</mca:CSharpReference>
        </OutArgument>
      </local:CodeActivityIINWorkflowApp.enterName>
    </local:CodeActivityIINWorkflowApp>
    <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_25">
      <InArgument x:TypeArguments="x:String">
        <mca:CSharpValue x:TypeArguments="x:String">defaultName + " Today's date is " + Convert.ToString(DateTime.Now);</mca:CSharpValue>
      </InArgument>
    </WriteLine>
    <Flowchart sap2010:WorkflowViewState.IdRef="Flowchart_1">
      <Flowchart.Variables>
        <Variable x:TypeArguments="x:Int32" Name="againWhileString" />
        <Variable x:TypeArguments="x:Int32" Name="CreateOrLogin" />
      </Flowchart.Variables>
      <Flowchart.StartNode>
        <FlowStep x:Name="__ReferenceID0" sap2010:WorkflowViewState.IdRef="FlowStep_1">
          <While sap2010:WorkflowViewState.IdRef="While_1">
            <While.Condition>
              <mca:CSharpValue x:TypeArguments="x:Boolean">againWhile</mca:CSharpValue>
            </While.Condition>
            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_3">
              <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="Service Start" />
              <TryCatch sap2010:WorkflowViewState.IdRef="TryCatch_1">
                <TryCatch.Try>
                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_4">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:Decimal" Name="variable1" />
                    </Sequence.Variables>
                    <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_10" Text="PLease enter 1 for Create and 2 for Login and 3 for Newforcus" />
                    <Assign sap2010:WorkflowViewState.IdRef="Assign_7">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">
                          <mca:CSharpReference x:TypeArguments="x:Int32">CreateOrLogin</mca:CSharpReference>
                        </OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Int32">
                          <mca:CSharpValue x:TypeArguments="x:Int32">Int32.Parse(Console.ReadLine())</mca:CSharpValue>
                        </InArgument>
                      </Assign.Value>
                    </Assign>
                    <If sap2010:WorkflowViewState.IdRef="If_4">
                      <If.Condition>
                        <InArgument x:TypeArguments="x:Boolean">
                          <mca:CSharpValue x:TypeArguments="x:Boolean">CreateOrLogin ==1 || CreateOrLogin ==2 || CreateOrLogin ==3</mca:CSharpValue>
                        </InArgument>
                      </If.Condition>
                      <If.Then>
                        <Switch x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="Switch`1_1">
                          <Switch.Default>
                            <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_13" Text="why default in try catch" />
                          </Switch.Default>
                          <Switch.Expression>
                            <InArgument x:TypeArguments="x:Int32">
                              <mca:CSharpValue x:TypeArguments="x:Int32">CreateOrLogin</mca:CSharpValue>
                            </InArgument>
                          </Switch.Expression>
                          <Sequence x:Key="1" sap2010:WorkflowViewState.IdRef="Sequence_5">
                            <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_18" Text="Account Service " />
                            <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_14" Text="Please enter your User name : " />
                            <Assign sap2010:WorkflowViewState.IdRef="Assign_8">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <mca:CSharpReference x:TypeArguments="x:String">UserNameArgument</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String">Console.ReadLine()</mca:CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                            <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_15" Text="Please enter your Password" />
                            <Assign sap2010:WorkflowViewState.IdRef="Assign_10">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <mca:CSharpReference x:TypeArguments="x:String">ToEncrypt</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String">Console.ReadLine()</mca:CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                            <local1:Encrypt sap2010:WorkflowViewState.IdRef="Encrypt_1" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces">
                              <local1:Encrypt.EncryptResult>
                                <OutArgument x:TypeArguments="x:String">
                                  <mca:CSharpReference x:TypeArguments="x:String">Encrypted</mca:CSharpReference>
                                </OutArgument>
                              </local1:Encrypt.EncryptResult>
                              <local1:Encrypt.text>
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String">ToEncrypt</mca:CSharpValue>
                                </InArgument>
                              </local1:Encrypt.text>
                            </local1:Encrypt>
                            <Assign sap2010:WorkflowViewState.IdRef="Assign_9">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <mca:CSharpReference x:TypeArguments="x:String">PasswordArgument</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String">Encrypted</mca:CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                            <local2:AccountService sap2010:WorkflowViewState.IdRef="AccountService_1" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces">
                              <local2:AccountService.OutResult>
                                <OutArgument x:TypeArguments="x:Boolean">
                                  <mca:CSharpReference x:TypeArguments="x:Boolean">ResultCreate</mca:CSharpReference>
                                </OutArgument>
                              </local2:AccountService.OutResult>
                              <local2:AccountService.input_Username>
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String">UserNameArgument</mca:CSharpValue>
                                </InArgument>
                              </local2:AccountService.input_Username>
                              <local2:AccountService.intput_Password>
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String">PasswordArgument</mca:CSharpValue>
                                </InArgument>
                              </local2:AccountService.intput_Password>
                            </local2:AccountService>
                            <If sap2010:WorkflowViewState.IdRef="If_5">
                              <If.Condition>
                                <InArgument x:TypeArguments="x:Boolean">
                                  <mca:CSharpValue x:TypeArguments="x:Boolean">ResultCreate == true</mca:CSharpValue>
                                </InArgument>
                              </If.Condition>
                              <If.Then>
                                <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_16">
                                  <InArgument x:TypeArguments="x:String">
                                    <mca:CSharpValue x:TypeArguments="x:String">"Account "+ UserNameArgument +" " + "Password" + PasswordArgument</mca:CSharpValue>
                                  </InArgument>
                                </WriteLine>
                              </If.Then>
                              <If.Else>
                                <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_17" Text="Account alreadt exits" />
                              </If.Else>
                            </If>
                          </Sequence>
                          <Sequence x:Key="2" sap2010:WorkflowViewState.IdRef="Sequence_6">
                            <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_19" Text="Login Service" />
                            <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_20" Text="Please enter your User name: " />
                            <Assign sap2010:WorkflowViewState.IdRef="Assign_11">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <mca:CSharpReference x:TypeArguments="x:String">UserNameArgument</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String">Console.ReadLine()</mca:CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                            <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_21" Text="Please enter your login password" />
                            <Assign sap2010:WorkflowViewState.IdRef="Assign_13">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <mca:CSharpReference x:TypeArguments="x:String">ToEncrypt</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String">Console.ReadLine()</mca:CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                            <local1:Encrypt sap2010:WorkflowViewState.IdRef="Encrypt_2" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces">
                              <local1:Encrypt.EncryptResult>
                                <OutArgument x:TypeArguments="x:String">
                                  <mca:CSharpReference x:TypeArguments="x:String">Encrypted</mca:CSharpReference>
                                </OutArgument>
                              </local1:Encrypt.EncryptResult>
                              <local1:Encrypt.text>
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String">ToEncrypt</mca:CSharpValue>
                                </InArgument>
                              </local1:Encrypt.text>
                            </local1:Encrypt>
                            <Assign sap2010:WorkflowViewState.IdRef="Assign_12">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <mca:CSharpReference x:TypeArguments="x:String">PasswordArgument</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String">Encrypted</mca:CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                            <local3:LoginService sap2010:WorkflowViewState.IdRef="LoginService_1" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces">
                              <local3:LoginService.Input_Password>
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String">PasswordArgument</mca:CSharpValue>
                                </InArgument>
                              </local3:LoginService.Input_Password>
                              <local3:LoginService.Input_Username>
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String">UserNameArgument</mca:CSharpValue>
                                </InArgument>
                              </local3:LoginService.Input_Username>
                              <local3:LoginService.OutPut_ResultLogin>
                                <OutArgument x:TypeArguments="s:Boolean[]">
                                  <mca:CSharpReference x:TypeArguments="s:Boolean[]">ResulltLogin</mca:CSharpReference>
                                </OutArgument>
                              </local3:LoginService.OutPut_ResultLogin>
                            </local3:LoginService>
                            <If sap2010:WorkflowViewState.IdRef="If_7">
                              <If.Condition>
                                <InArgument x:TypeArguments="x:Boolean">
                                  <mca:CSharpValue x:TypeArguments="x:Boolean">(ResulltLogin[0] == true) &amp;&amp; (ResulltLogin[1] == true)</mca:CSharpValue>
                                </InArgument>
                              </If.Condition>
                              <If.Then>
                                <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_22">
                                  <InArgument x:TypeArguments="x:String">
                                    <mca:CSharpValue x:TypeArguments="x:String">"Welcome User: " + UserNameArgument +" Password " + PasswordArgument</mca:CSharpValue>
                                  </InArgument>
                                </WriteLine>
                              </If.Then>
                              <If.Else>
                                <If sap2010:WorkflowViewState.IdRef="If_6">
                                  <If.Condition>
                                    <InArgument x:TypeArguments="x:Boolean">
                                      <mca:CSharpValue x:TypeArguments="x:Boolean">ResulltLogin[1] == true</mca:CSharpValue>
                                    </InArgument>
                                  </If.Condition>
                                  <If.Then>
                                    <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_23" Text="Password Correct but Username not" />
                                  </If.Then>
                                  <If.Else>
                                    <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_24" Text="Password and username incorrect" />
                                  </If.Else>
                                </If>
                              </If.Else>
                            </If>
                          </Sequence>
                          <Sequence x:Key="3" sap2010:WorkflowViewState.IdRef="Sequence_7">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="scg:List(x:String)" Name="myList" />
                              <Variable x:TypeArguments="x:String" Name="NewString" />
                              <Variable x:TypeArguments="s:String[]" Name="NewStringArray" />
                              <Variable x:TypeArguments="x:String" Name="ResultNewForcus" />
                            </Sequence.Variables>
                            <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_26" Text="New forcus Service" />
                            <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_27" Text="Please Enter a topic need to search Please enter , at the end" />
                            <Assign sap2010:WorkflowViewState.IdRef="Assign_14">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">
                                  <mca:CSharpReference x:TypeArguments="x:String">NewString</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">
                                  <mca:CSharpValue x:TypeArguments="x:String">Console.ReadLine()</mca:CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap2010:WorkflowViewState.IdRef="Assign_16">
                              <Assign.To>
                                <OutArgument x:TypeArguments="s:String[]">
                                  <mca:CSharpReference x:TypeArguments="s:String[]">Topic</mca:CSharpReference>
                                </OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="s:String[]">
                                  <mca:CSharpValue x:TypeArguments="s:String[]">NewString.Split(',')</mca:CSharpValue>
                                </InArgument>
                              </Assign.Value>
                            </Assign>
                            <local4:NewForcusService sap2010:WorkflowViewState.IdRef="NewForcusService_1" mva:VisualBasic.Settings="Assembly references and imported namespaces serialized as XML namespaces">
                              <local4:NewForcusService.Input_topic>
                                <InArgument x:TypeArguments="s:String[]">
                                  <mca:CSharpValue x:TypeArguments="s:String[]">Topic</mca:CSharpValue>
                                </InArgument>
                              </local4:NewForcusService.Input_topic>
                              <local4:NewForcusService.Output_Result>
                                <OutArgument x:TypeArguments="s:String[]">
                                  <mca:CSharpReference x:TypeArguments="s:String[]">ResultTopic</mca:CSharpReference>
                                </OutArgument>
                              </local4:NewForcusService.Output_Result>
                            </local4:NewForcusService>
                            <ForEach x:TypeArguments="x:String" DisplayName="ForEach&lt;String&gt;" sap2010:WorkflowViewState.IdRef="ForEach`1_1">
                              <ForEach.Values>
                                <InArgument x:TypeArguments="scg:IEnumerable(x:String)">
                                  <mca:CSharpValue x:TypeArguments="scg:IEnumerable(x:String)">ResultTopic</mca:CSharpValue>
                                </InArgument>
                              </ForEach.Values>
                              <ActivityAction x:TypeArguments="x:String">
                                <ActivityAction.Argument>
                                  <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                                </ActivityAction.Argument>
                                <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_28">
                                  <InArgument x:TypeArguments="x:String">
                                    <mca:CSharpValue x:TypeArguments="x:String">item</mca:CSharpValue>
                                  </InArgument>
                                </WriteLine>
                              </ActivityAction>
                            </ForEach>
                          </Sequence>
                        </Switch>
                      </If.Then>
                      <If.Else>
                        <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_12" Text="Please enter 1 for Create and 2 for login 3 for Newforcus" />
                      </If.Else>
                    </If>
                  </Sequence>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:ArgumentException" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                    <ActivityAction x:TypeArguments="s:ArgumentException">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:ArgumentException" Name="exception" />
                      </ActivityAction.Argument>
                      <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_9">
                        <InArgument x:TypeArguments="x:String">
                          <mca:CSharpValue x:TypeArguments="x:String">"Error " + exception;</mca:CSharpValue>
                        </InArgument>
                      </WriteLine>
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
              <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_4" Text="Do you want to run again ? (1/0)" />
              <Assign sap2010:WorkflowViewState.IdRef="Assign_1">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">
                    <mca:CSharpReference x:TypeArguments="x:Int32">againWhileString</mca:CSharpReference>
                  </OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">
                    <mca:CSharpValue x:TypeArguments="x:Int32">Int32.Parse(Console.ReadLine())</mca:CSharpValue>
                  </InArgument>
                </Assign.Value>
              </Assign>
              <If sap2010:WorkflowViewState.IdRef="If_3">
                <If.Condition>
                  <InArgument x:TypeArguments="x:Boolean">
                    <mca:CSharpValue x:TypeArguments="x:Boolean">(againWhileString ==1) || (againWhileString ==0)</mca:CSharpValue>
                  </InArgument>
                </If.Condition>
                <If.Then>
                  <If sap2010:WorkflowViewState.IdRef="If_2">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <mca:CSharpValue x:TypeArguments="x:Boolean">againWhileString ==1</mca:CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <If.Then>
                      <Assign sap2010:WorkflowViewState.IdRef="Assign_5">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">
                            <mca:CSharpReference x:TypeArguments="x:Boolean">againWhile</mca:CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                        </Assign.Value>
                      </Assign>
                    </If.Then>
                    <If.Else>
                      <Assign sap2010:WorkflowViewState.IdRef="Assign_6">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">
                            <mca:CSharpReference x:TypeArguments="x:Boolean">againWhile</mca:CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                        </Assign.Value>
                      </Assign>
                    </If.Else>
                  </If>
                </If.Then>
                <If.Else>
                  <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_8" Text="Please enterr 1 for yes and 0 for no" />
                </If.Else>
              </If>
            </Sequence>
          </While>
          <FlowStep.Next>
            <x:Reference>__ReferenceID0</x:Reference>
          </FlowStep.Next>
        </FlowStep>
      </Flowchart.StartNode>
      <x:Reference>__ReferenceID0</x:Reference>
    </Flowchart>
    <sads:DebugSymbol.Symbol>d19EOlxDIyBwcm9ncmFtXGNzZTQ0NV9Qcm9qZWN0Ml9hM19OZXdcV29ya2Zsb3dDb25zb2xlQXBwbGljYXRpb25Gb3JBY2NvdW50U2VydmljZVxXb3JrZmxvdzEueGFtbIIBQAPZAw4CAQFCNUI7AgEDQzRDPwIBAkUFRWMDAc4GRgVRKAMBtQZSBVYRAwGoBlcF1wMRAgEERUNFYAMBzwZOC05cAwHCBkkLSVQDAbYGVAlUigEDAakGXgvQAxMCAQViDc8DGAIBFGAPYFgCAQZjD2NfAwGmBmQPlgMaAgF0lwMPlwNyAgFymAMPowMYAgFVpAMPzgMUAgEVY01jXAMBpwZmE4YDHgMBhQGOAxeSAyMCAXWXA02XA28CAXOgAxWgA3ECAWSbAxWbA2oCAVanAxWnA4QBAgEWqwMTyQMYAgEmzAMTzAN6AgEkahVqlgEDAaQGaxV2HgMBhQZ3FYUDGgMBhgGQAxuQA24CAXauAxmuA2wCASeyAxe7AyACAUW+AxfHAyACATXMA1HMA3cCASVqVGqTAQMBpQZzG3N3AwGVBm4bbm0DAYYGeht6lQEDAYcBfhmAAyIDAZgBgwMZgwOWAQMBlgG5A0O5A0cCAVS1Ax21A24CAUbFA0PFA0gCAUTBAx3BA24CATaEAR+EAWkDAZkBhwEb3QEmAwGyBN4BG8ACJgMBzQLBAhv/AiYDAaoBgAEdgAF5AwGoAYMDWIMDkwEDAZcBiAEdiAFxAwGDBokBHYkBfwMBgQaKAR2VASYDAeIFlgEdlgF7AwHgBZcBHaIBJgMBwQWjAR2uAS4DAaIFrwEdugEmAwGDBbsBHcsBNQMB1QTMAR3cASIDAbME3wEd3wFuAwGwBOABHeABfgMBrgThAR3sASYDAY8E7QEd7QGBAQMBjQTuAR35ASYDAe4D+gEdhQIuAwHPA4YCHZECJgMBsAOSAh2iAjMDAYIDowIdvwIiAwHOAsgCHcgCcwMBywLJAh3JAp4BAwHJAsoCHdUCJgMBogLWAh3hAiYDAfsB4gId7QI3AwHUAe4CHf4CJwMBqwGAAVyAAXYDAakBiAFciAFuAwGEBokBXIkBfAMBggaSASOSAXMDAfIFjQEjjQF5AwHjBZYBXJYBeAMB4QWfASOfAXMDAdEFmgEjmgFyAwHCBasBI6sBagMBsgWmASOmAXIDAaMFtwEjtwFqAwGTBbIBI7IBeQMBhAW+ASO+AXYDAfQEyAEjyAFxAwHlBMMBI8MBcQMB1gTPASPPAXYDAbQE0wEh1wEtAwHFBNoBIdoBegMBwwTfAVzfAWsDAbEE4AFc4AF7AwGvBOkBI+kBcwMBnwTkASPkAXkDAZAE7QFc7QF+AwGOBPYBI/YBcwMB/gPxASPxAXIDAe8DggIjggJqAwHfA/0BI/0BcgMB0AOOAiOOAmoDAcADiQIjiQJ5AwGxA58CI58CeAMBoQOVAiOVAnEDAZIDmgIjmgJxAwGDA6YCI6YCoAEDAc8CqgIhrgItAwHyArECIb0CJgMB3gLIAlzIAnADAcwCyQJcyQKbAQMBygLSAiPSAnMDAbYCzQIjzQJyAwGjAt4CI94CdwMBjwLZAiPZAnADAfwB6gIj6gJ2AwHoAeUCI+UCaAMB1QHxAiPxAn0DAcEB+AIh/AItAwGsAdUBJdUBpAEDAcYE2gFg2gF3AwHEBKwCJawCpwEDAfMCtAIntAJ9AwHfArgCJbgCigEDAfACuwIluwKIAQMB7gL6AiX6AmcDAa0BuAJkuAKHAQMB8QK7AmS7AoUBAwHvAg==</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="WriteLine_1" sap:VirtualizedContainerService.HintSize="614,62" />
      <sap2010:ViewStateData Id="CodeActivityIINWorkflowApp_1" sap:VirtualizedContainerService.HintSize="614,22" />
      <sap2010:ViewStateData Id="WriteLine_25" sap:VirtualizedContainerService.HintSize="614,62" />
      <sap2010:ViewStateData Id="WriteLine_2" sap:VirtualizedContainerService.HintSize="752,62" />
      <sap2010:ViewStateData Id="WriteLine_10" sap:VirtualizedContainerService.HintSize="712,62" />
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="712,62" />
      <sap2010:ViewStateData Id="WriteLine_13" sap:VirtualizedContainerService.HintSize="210,62" />
      <sap2010:ViewStateData Id="WriteLine_18" sap:VirtualizedContainerService.HintSize="464,62" />
      <sap2010:ViewStateData Id="WriteLine_14" sap:VirtualizedContainerService.HintSize="464,62" />
      <sap2010:ViewStateData Id="Assign_8" sap:VirtualizedContainerService.HintSize="464,62" />
      <sap2010:ViewStateData Id="WriteLine_15" sap:VirtualizedContainerService.HintSize="464,62" />
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="464,62" />
      <sap2010:ViewStateData Id="Encrypt_1" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="464,62" />
      <sap2010:ViewStateData Id="AccountService_1" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="WriteLine_16" sap:VirtualizedContainerService.HintSize="210,62" />
      <sap2010:ViewStateData Id="WriteLine_17" sap:VirtualizedContainerService.HintSize="210,62" />
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="464,212" />
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="486,1067">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_19" sap:VirtualizedContainerService.HintSize="699,62" />
      <sap2010:ViewStateData Id="WriteLine_20" sap:VirtualizedContainerService.HintSize="699,62" />
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="699,62" />
      <sap2010:ViewStateData Id="WriteLine_21" sap:VirtualizedContainerService.HintSize="699,62" />
      <sap2010:ViewStateData Id="Assign_13" sap:VirtualizedContainerService.HintSize="699,62" />
      <sap2010:ViewStateData Id="Encrypt_2" sap:VirtualizedContainerService.HintSize="699,22" />
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="699,62" />
      <sap2010:ViewStateData Id="LoginService_1" sap:VirtualizedContainerService.HintSize="699,22" />
      <sap2010:ViewStateData Id="WriteLine_22" sap:VirtualizedContainerService.HintSize="210,62" />
      <sap2010:ViewStateData Id="WriteLine_23" sap:VirtualizedContainerService.HintSize="210,62" />
      <sap2010:ViewStateData Id="WriteLine_24" sap:VirtualizedContainerService.HintSize="210,76" />
      <sap2010:ViewStateData Id="If_6" sap:VirtualizedContainerService.HintSize="464,226" />
      <sap2010:ViewStateData Id="If_7" sap:VirtualizedContainerService.HintSize="699,376" />
      <sap2010:ViewStateData Id="Sequence_6" sap:VirtualizedContainerService.HintSize="721,1231">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_26" sap:VirtualizedContainerService.HintSize="287,62" />
      <sap2010:ViewStateData Id="WriteLine_27" sap:VirtualizedContainerService.HintSize="287,76" />
      <sap2010:ViewStateData Id="Assign_14" sap:VirtualizedContainerService.HintSize="287,62" />
      <sap2010:ViewStateData Id="Assign_16" sap:VirtualizedContainerService.HintSize="287,62" />
      <sap2010:ViewStateData Id="NewForcusService_1" sap:VirtualizedContainerService.HintSize="287,22" />
      <sap2010:ViewStateData Id="WriteLine_28" sap:VirtualizedContainerService.HintSize="210,62" />
      <sap2010:ViewStateData Id="ForEach`1_1" sap:VirtualizedContainerService.HintSize="287,212" />
      <sap2010:ViewStateData Id="Sequence_7" sap:VirtualizedContainerService.HintSize="309,820">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Switch`1_1" sap:VirtualizedContainerService.HintSize="477,1034" />
      <sap2010:ViewStateData Id="WriteLine_12" sap:VirtualizedContainerService.HintSize="210,62" />
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="712,1058" />
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="734,1386">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_9" sap:VirtualizedContainerService.HintSize="210,62" />
      <sap2010:ViewStateData Id="Catch`1_1" sap:VirtualizedContainerService.HintSize="738,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="752,1613" />
      <sap2010:ViewStateData Id="WriteLine_4" sap:VirtualizedContainerService.HintSize="752,62" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="752,62" />
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="509,214" />
      <sap2010:ViewStateData Id="WriteLine_8" sap:VirtualizedContainerService.HintSize="210,62" />
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="752,364" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="774,2447">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_1" sap:VirtualizedContainerService.HintSize="800,2607">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">200,124.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,124.5 300,124.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_1" sap:VirtualizedContainerService.HintSize="614,636">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,124.5</av:PointCollection>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="636,1026">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WorkflowConsoleApplicationForAccountService.Workflow1_1" sap:VirtualizedContainerService.HintSize="676,1106" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>